// Generated by view binder compiler. Do not edit!
package com.bsc.protonbusmodscom.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bsc.protonbusmodscom.R;
import com.google.android.material.slider.Slider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDisplayRouteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAddCamada;

  @NonNull
  public final Button btnChoiceColor;

  @NonNull
  public final Button btnDown;

  @NonNull
  public final Button btnLeft;

  @NonNull
  public final Button btnRight;

  @NonNull
  public final Button btnSaveGallery;

  @NonNull
  public final Button btnUP;

  @NonNull
  public final Spinner fontSpinner;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imgDisplay;

  @NonNull
  public final RecyclerView rvListObjectsEditor;

  @NonNull
  public final Slider sliderfontsize;

  @NonNull
  public final EditText txtDisplayRoute;

  private FragmentDisplayRouteBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnAddCamada, @NonNull Button btnChoiceColor, @NonNull Button btnDown,
      @NonNull Button btnLeft, @NonNull Button btnRight, @NonNull Button btnSaveGallery,
      @NonNull Button btnUP, @NonNull Spinner fontSpinner, @NonNull ImageView imageView,
      @NonNull ImageView imageView2, @NonNull ImageView imgDisplay,
      @NonNull RecyclerView rvListObjectsEditor, @NonNull Slider sliderfontsize,
      @NonNull EditText txtDisplayRoute) {
    this.rootView = rootView;
    this.btnAddCamada = btnAddCamada;
    this.btnChoiceColor = btnChoiceColor;
    this.btnDown = btnDown;
    this.btnLeft = btnLeft;
    this.btnRight = btnRight;
    this.btnSaveGallery = btnSaveGallery;
    this.btnUP = btnUP;
    this.fontSpinner = fontSpinner;
    this.imageView = imageView;
    this.imageView2 = imageView2;
    this.imgDisplay = imgDisplay;
    this.rvListObjectsEditor = rvListObjectsEditor;
    this.sliderfontsize = sliderfontsize;
    this.txtDisplayRoute = txtDisplayRoute;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDisplayRouteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDisplayRouteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_display_route, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDisplayRouteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddCamada;
      Button btnAddCamada = ViewBindings.findChildViewById(rootView, id);
      if (btnAddCamada == null) {
        break missingId;
      }

      id = R.id.btnChoiceColor;
      Button btnChoiceColor = ViewBindings.findChildViewById(rootView, id);
      if (btnChoiceColor == null) {
        break missingId;
      }

      id = R.id.btnDown;
      Button btnDown = ViewBindings.findChildViewById(rootView, id);
      if (btnDown == null) {
        break missingId;
      }

      id = R.id.btnLeft;
      Button btnLeft = ViewBindings.findChildViewById(rootView, id);
      if (btnLeft == null) {
        break missingId;
      }

      id = R.id.btnRight;
      Button btnRight = ViewBindings.findChildViewById(rootView, id);
      if (btnRight == null) {
        break missingId;
      }

      id = R.id.btnSaveGallery;
      Button btnSaveGallery = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveGallery == null) {
        break missingId;
      }

      id = R.id.btnUP;
      Button btnUP = ViewBindings.findChildViewById(rootView, id);
      if (btnUP == null) {
        break missingId;
      }

      id = R.id.fontSpinner;
      Spinner fontSpinner = ViewBindings.findChildViewById(rootView, id);
      if (fontSpinner == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imgDisplay;
      ImageView imgDisplay = ViewBindings.findChildViewById(rootView, id);
      if (imgDisplay == null) {
        break missingId;
      }

      id = R.id.rvListObjectsEditor;
      RecyclerView rvListObjectsEditor = ViewBindings.findChildViewById(rootView, id);
      if (rvListObjectsEditor == null) {
        break missingId;
      }

      id = R.id.sliderfontsize;
      Slider sliderfontsize = ViewBindings.findChildViewById(rootView, id);
      if (sliderfontsize == null) {
        break missingId;
      }

      id = R.id.txtDisplayRoute;
      EditText txtDisplayRoute = ViewBindings.findChildViewById(rootView, id);
      if (txtDisplayRoute == null) {
        break missingId;
      }

      return new FragmentDisplayRouteBinding((ConstraintLayout) rootView, btnAddCamada,
          btnChoiceColor, btnDown, btnLeft, btnRight, btnSaveGallery, btnUP, fontSpinner, imageView,
          imageView2, imgDisplay, rvListObjectsEditor, sliderfontsize, txtDisplayRoute);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
