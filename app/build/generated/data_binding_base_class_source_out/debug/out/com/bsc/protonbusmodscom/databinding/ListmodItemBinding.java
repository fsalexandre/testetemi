// Generated by view binder compiler. Do not edit!
package com.bsc.protonbusmodscom.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bsc.protonbusmodscom.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListmodItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final TextView dtModAssembly;

  @NonNull
  public final TextView dtModStyle;

  @NonNull
  public final TextView frThumbDesc;

  @NonNull
  public final ImageView frThumbImg;

  @NonNull
  public final TextView txtTextContent;

  private ListmodItemBinding(@NonNull ConstraintLayout rootView, @NonNull View divider,
      @NonNull TextView dtModAssembly, @NonNull TextView dtModStyle, @NonNull TextView frThumbDesc,
      @NonNull ImageView frThumbImg, @NonNull TextView txtTextContent) {
    this.rootView = rootView;
    this.divider = divider;
    this.dtModAssembly = dtModAssembly;
    this.dtModStyle = dtModStyle;
    this.frThumbDesc = frThumbDesc;
    this.frThumbImg = frThumbImg;
    this.txtTextContent = txtTextContent;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListmodItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListmodItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.listmod_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListmodItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.dt_mod_assembly;
      TextView dtModAssembly = ViewBindings.findChildViewById(rootView, id);
      if (dtModAssembly == null) {
        break missingId;
      }

      id = R.id.dt_mod_style;
      TextView dtModStyle = ViewBindings.findChildViewById(rootView, id);
      if (dtModStyle == null) {
        break missingId;
      }

      id = R.id.fr_thumb_desc;
      TextView frThumbDesc = ViewBindings.findChildViewById(rootView, id);
      if (frThumbDesc == null) {
        break missingId;
      }

      id = R.id.fr_thumb_img;
      ImageView frThumbImg = ViewBindings.findChildViewById(rootView, id);
      if (frThumbImg == null) {
        break missingId;
      }

      id = R.id.txtTextContent;
      TextView txtTextContent = ViewBindings.findChildViewById(rootView, id);
      if (txtTextContent == null) {
        break missingId;
      }

      return new ListmodItemBinding((ConstraintLayout) rootView, divider, dtModAssembly, dtModStyle,
          frThumbDesc, frThumbImg, txtTextContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
